/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2015-12-16 01:20:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tour;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import tour.Map;

public final class KeywordSearchResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>관광정보 안내 서비스</title>\r\n");
      out.write("\t\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\t\t<meta name=\"description\" content=\"\" />\r\n");
      out.write("\t\t<meta name=\"keywords\" content=\"\" />\r\n");
      out.write("\r\n");
      out.write("\t\t<script src=\"js/jquery.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/skel.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/skel-layers.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/init.js\"></script>\r\n");
      out.write("\t\t<noscript>\r\n");
      out.write("\t\t\t<link rel=\"stylesheet\" href=\"css/skel.css\" />\r\n");
      out.write("\t\t\t<link rel=\"stylesheet\" href=\"css/style.css\" />\r\n");
      out.write("\t\t\t<link rel=\"stylesheet\" href=\"css/style-xlarge.css\" />\r\n");
      out.write("\t\t</noscript>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t.map_wrap, .map_wrap * {margin:0;padding:0;font-family:'Malgun Gothic',dotum,'돋움',sans-serif;font-size:12px;}\r\n");
      out.write("\t\t.map_wrap a, .map_wrap a:hover, .map_wrap a:active{color:#000;text-decoration: none;}\r\n");
      out.write("\t\t.map_wrap {position:relative;width:100%;height:500px;}\r\n");
      out.write("\t\t#menu_wrap {position:absolute;top:0;left:0;bottom:0;width:250px;margin:10px 0 30px 10px;padding:5px;overflow-y:auto;background:rgba(255, 255, 255, 0.7);z-index: 1;font-size:12px;border-radius: 10px;}\r\n");
      out.write("\t\t.bg_white {background:#fff;}\r\n");
      out.write("\t\t#menu_wrap hr {display: block; height: 1px;border: 0; border-top: 2px solid #5F5F5F;margin:3px 0;}\r\n");
      out.write("\t\t#menu_wrap .option{text-align: center;}\r\n");
      out.write("\t\t#menu_wrap .option p {margin:10px 0;}  \r\n");
      out.write("\t\t#menu_wrap .option button {margin-left:5px;}\r\n");
      out.write("\t\t#placesList li {list-style: none;}\r\n");
      out.write("\t\t#placesList .item {position:relative;border-bottom:1px solid #888;overflow: hidden;cursor: pointer;min-height: 65px;}\r\n");
      out.write("\t\t#placesList .item span {display: block;margin-top:4px;}\r\n");
      out.write("\t\t#placesList .item h5, #placesList .item .info {text-overflow: ellipsis;overflow: hidden;white-space: nowrap;}\r\n");
      out.write("\t\t#placesList .item .info{padding:10px 0 10px 55px;}\r\n");
      out.write("\t\t#placesList .info .gray {color:#8a8a8a;}\r\n");
      out.write("\t\t#placesList .info .jibun {padding-left:26px;background:url(http://i1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;}\r\n");
      out.write("\t\t#placesList .info .tel {color:#009900;}\r\n");
      out.write("\t\t#placesList .item .markerbg {float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 10px;background:url(http://i1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;}\r\n");
      out.write("\t\t#placesList .item .marker_1 {background-position: 0 -10px;}\r\n");
      out.write("\t\t#placesList .item .marker_2 {background-position: 0 -56px;}\r\n");
      out.write("\t\t#placesList .item .marker_3 {background-position: 0 -102px}\r\n");
      out.write("\t\t#placesList .item .marker_4 {background-position: 0 -148px;}\r\n");
      out.write("\t\t#placesList .item .marker_5 {background-position: 0 -194px;}\r\n");
      out.write("\t\t#placesList .item .marker_6 {background-position: 0 -240px;}\r\n");
      out.write("\t\t#placesList .item .marker_7 {background-position: 0 -286px;}\r\n");
      out.write("\t\t#placesList .item .marker_8 {background-position: 0 -332px;}\r\n");
      out.write("\t\t#placesList .item .marker_9 {background-position: 0 -378px;}\r\n");
      out.write("\t\t#placesList .item .marker_10 {background-position: 0 -423px;}\r\n");
      out.write("\t\t#placesList .item .marker_11 {background-position: 0 -470px;}\r\n");
      out.write("\t\t#placesList .item .marker_12 {background-position: 0 -516px;}\r\n");
      out.write("\t\t#placesList .item .marker_13 {background-position: 0 -562px;}\r\n");
      out.write("\t\t#placesList .item .marker_14 {background-position: 0 -608px;}\r\n");
      out.write("\t\t#placesList .item .marker_15 {background-position: 0 -654px;}\r\n");
      out.write("\t\t#pagination {margin:10px auto;text-align: center;}\r\n");
      out.write("\t\t#pagination a {display:inline-block;margin-right:10px;}\r\n");
      out.write("\t\t#pagination .on {font-weight: bold; cursor: default;color:#777;}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body class=\"landing\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Header -->\r\n");
      out.write("\t\t\t<header id=\"header\" class=\"alt\">\r\n");
      out.write("\t\t\t\t<h1><strong><a href=\"index.html\">Duksung</a></strong> by youjin</h1>\r\n");
      out.write("\t\t\t\t<nav id=\"nav\">\r\n");
      out.write("\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">Generic</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\">Elements</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</nav>\r\n");
      out.write("\t\t\t</header>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Banner -->\r\n");
      out.write("\t\t\t<section id=\"banner\">\r\n");
      out.write("\t\t\t\t<h2>Duksung</h2>\r\n");
      out.write("\t\t\t\t<p>20131079 컴퓨터학과 박유진</p>\r\n");
      out.write("\t\t\t\t<ul class=\"actions\">\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\" class=\"button special big\">Get Started</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</section>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Two -->\r\n");
      out.write("\t\t\t\t<section id=\"two\" class=\"wrapper style2 special\">\r\n");
      out.write("\t\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"map_wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t    <div id=\"map\" style=\"width:1500px;height:500px;position:relative;overflow:hidden;\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    <div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("\t\t\t\t\t\t\t        <div class=\"option\">\r\n");
      out.write("\t\t\t\t\t\t\t            <p>\r\n");
      out.write("\t\t\t\t\t\t\t                <form onsubmit=\"searchPlaces(); return false;\">\r\n");
      out.write("\t\t\t\t\t\t\t                키워드 : <input type=\"text\" value=\"감로당\" id=\"keyword\" size=\"15\"> \r\n");
      out.write("\t\t\t\t\t\t\t                <button type=\"submit\">검색하기</button> \r\n");
      out.write("\t\t\t\t\t\t\t            </p>\r\n");
      out.write("\t\t\t\t\t\t\t        </div>\r\n");
      out.write("\t\t\t\t\t\t\t        <hr>\r\n");
      out.write("\t\t\t\t\t\t\t        <ul id=\"placesList\"></ul>\r\n");
      out.write("\t\t\t\t\t\t\t        <div id=\"pagination\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<script type=\"text/javascript\" src=\"//apis.daum.net/maps/maps3.js?apikey=d4a5fc60d12d06e0be6a9282fa0bd3aa&libraries=services\"></script>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t// 마커를 담을 배열입니다\r\n");
      out.write("\t\t\t\t\t\t\tvar markers = [];\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tvar mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("\t\t\t\t\t\t\t    mapOption = {\r\n");
      out.write("\t\t\t\t\t\t\t        center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n");
      out.write("\t\t\t\t\t\t\t        level: 3 // 지도의 확대 레벨\r\n");
      out.write("\t\t\t\t\t\t\t    };  \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 지도를 생성합니다    \r\n");
      out.write("\t\t\t\t\t\t\tvar map = new daum.maps.Map(mapContainer, mapOption); \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 장소 검색 객체를 생성합니다\r\n");
      out.write("\t\t\t\t\t\t\tvar ps = new daum.maps.services.Places();  \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n");
      out.write("\t\t\t\t\t\t\tvar infowindow = new daum.maps.InfoWindow({zIndex:1});\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 키워드로 장소를 검색합니다\r\n");
      out.write("\t\t\t\t\t\t\tsearchPlaces();\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 키워드 검색을 요청하는 함수입니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction searchPlaces() {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    var keyword = document.getElementById('keyword').value;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n");
      out.write("\t\t\t\t\t\t\t        alert('키워드를 입력해주세요!');\r\n");
      out.write("\t\t\t\t\t\t\t        return false;\r\n");
      out.write("\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n");
      out.write("\t\t\t\t\t\t\t    ps.keywordSearch( keyword, placesSearchCB); \r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction placesSearchCB(status, data, pagination) {\r\n");
      out.write("\t\t\t\t\t\t\t    if (status === daum.maps.services.Status.OK) {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        // 정상적으로 검색이 완료됐으면\r\n");
      out.write("\t\t\t\t\t\t\t        // 검색 목록과 마커를 표출합니다\r\n");
      out.write("\t\t\t\t\t\t\t        displayPlaces(data.places);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        // 페이지 번호를 표출합니다\r\n");
      out.write("\t\t\t\t\t\t\t        displayPagination(pagination);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    } else if (status === daum.maps.services.Status.ZERO_RESULT) {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        alert('검색 결과가 존재하지 않습니다.');\r\n");
      out.write("\t\t\t\t\t\t\t        return;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    } else if (status === daum.maps.services.Status.ERROR) {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        alert('검색 결과 중 오류가 발생했습니다.');\r\n");
      out.write("\t\t\t\t\t\t\t        return;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 검색 결과 목록과 마커를 표출하는 함수입니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction displayPlaces(places) {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    var listEl = document.getElementById('placesList'), \r\n");
      out.write("\t\t\t\t\t\t\t    menuEl = document.getElementById('menu_wrap'),\r\n");
      out.write("\t\t\t\t\t\t\t    fragment = document.createDocumentFragment(), \r\n");
      out.write("\t\t\t\t\t\t\t    bounds = new daum.maps.LatLngBounds(), \r\n");
      out.write("\t\t\t\t\t\t\t    listStr = '';\r\n");
      out.write("\t\t\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t\t\t    // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n");
      out.write("\t\t\t\t\t\t\t    removeAllChildNods(listEl);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    // 지도에 표시되고 있는 마커를 제거합니다\r\n");
      out.write("\t\t\t\t\t\t\t    removeMarker();\r\n");
      out.write("\t\t\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t\t\t    for ( var i=0; i<places.length; i++ ) {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        // 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("\t\t\t\t\t\t\t        var placePosition = new daum.maps.LatLng(places[i].latitude, places[i].longitude),\r\n");
      out.write("\t\t\t\t\t\t\t            marker = addMarker(placePosition, i), \r\n");
      out.write("\t\t\t\t\t\t\t            itemEl = getListItem(i, places[i], marker); // 검색 결과 항목 Element를 생성합니다\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("\t\t\t\t\t\t\t        // LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("\t\t\t\t\t\t\t        bounds.extend(placePosition);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        // 마커와 검색결과 항목에 mouseover 했을때\r\n");
      out.write("\t\t\t\t\t\t\t        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\t\t\t\t\t\t\t        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n");
      out.write("\t\t\t\t\t\t\t        (function(marker, title) {\r\n");
      out.write("\t\t\t\t\t\t\t            daum.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("\t\t\t\t\t\t\t                displayInfowindow(marker, title);\r\n");
      out.write("\t\t\t\t\t\t\t            });\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t            daum.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("\t\t\t\t\t\t\t                infowindow.close();\r\n");
      out.write("\t\t\t\t\t\t\t            });\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t            itemEl.onmouseover =  function () {\r\n");
      out.write("\t\t\t\t\t\t\t                displayInfowindow(marker, title);\r\n");
      out.write("\t\t\t\t\t\t\t            };\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t            itemEl.onmouseout =  function () {\r\n");
      out.write("\t\t\t\t\t\t\t                infowindow.close();\r\n");
      out.write("\t\t\t\t\t\t\t            };\r\n");
      out.write("\t\t\t\t\t\t\t        })(marker, places[i].title);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        fragment.appendChild(itemEl);\r\n");
      out.write("\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n");
      out.write("\t\t\t\t\t\t\t    listEl.appendChild(fragment);\r\n");
      out.write("\t\t\t\t\t\t\t    menuEl.scrollTop = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("\t\t\t\t\t\t\t    map.setBounds(bounds);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 검색결과 항목을 Element로 반환하는 함수입니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction getListItem(index, places) {\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    var el = document.createElement('li'),\r\n");
      out.write("\t\t\t\t\t\t\t    itemStr = '<span class=\"markerbg marker_' + (index+1) + '\"></span>' +\r\n");
      out.write("\t\t\t\t\t\t\t                '<div class=\"info\">' +\r\n");
      out.write("\t\t\t\t\t\t\t                '   <h5>' + places.title + '</h5>';\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    if (places.newAddress) {\r\n");
      out.write("\t\t\t\t\t\t\t        itemStr += '    <span>' + places.newAddress + '</span>' +\r\n");
      out.write("\t\t\t\t\t\t\t                    '   <span class=\"jibun gray\">' +  places.address  + '</span>';\r\n");
      out.write("\t\t\t\t\t\t\t    } else {\r\n");
      out.write("\t\t\t\t\t\t\t        itemStr += '    <span>' +  places.address  + '</span>'; \r\n");
      out.write("\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t                 \r\n");
      out.write("\t\t\t\t\t\t\t      itemStr += '  <span class=\"tel\">' + places.phone  + '</span>' +\r\n");
      out.write("\t\t\t\t\t\t\t                '</div>';           \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    el.innerHTML = itemStr;\r\n");
      out.write("\t\t\t\t\t\t\t    el.className = 'item';\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    return el;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction addMarker(position, idx, title) {\r\n");
      out.write("\t\t\t\t\t\t\t    var imageSrc = 'http://i1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n");
      out.write("\t\t\t\t\t\t\t        imageSize = new daum.maps.Size(36, 37),  // 마커 이미지의 크기\r\n");
      out.write("\t\t\t\t\t\t\t        imgOptions =  {\r\n");
      out.write("\t\t\t\t\t\t\t            spriteSize : new daum.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n");
      out.write("\t\t\t\t\t\t\t            spriteOrigin : new daum.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n");
      out.write("\t\t\t\t\t\t\t            offset: new daum.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n");
      out.write("\t\t\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t\t\t        markerImage = new daum.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n");
      out.write("\t\t\t\t\t\t\t            marker = new daum.maps.Marker({\r\n");
      out.write("\t\t\t\t\t\t\t            position: position, // 마커의 위치\r\n");
      out.write("\t\t\t\t\t\t\t            image: markerImage \r\n");
      out.write("\t\t\t\t\t\t\t        });\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n");
      out.write("\t\t\t\t\t\t\t    markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    return marker;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction removeMarker() {\r\n");
      out.write("\t\t\t\t\t\t\t    for ( var i = 0; i < markers.length; i++ ) {\r\n");
      out.write("\t\t\t\t\t\t\t        markers[i].setMap(null);\r\n");
      out.write("\t\t\t\t\t\t\t    }   \r\n");
      out.write("\t\t\t\t\t\t\t    markers = [];\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction displayPagination(pagination) {\r\n");
      out.write("\t\t\t\t\t\t\t    var paginationEl = document.getElementById('pagination'),\r\n");
      out.write("\t\t\t\t\t\t\t        fragment = document.createDocumentFragment(),\r\n");
      out.write("\t\t\t\t\t\t\t        i; \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    // 기존에 추가된 페이지번호를 삭제합니다\r\n");
      out.write("\t\t\t\t\t\t\t    while (paginationEl.hasChildNodes()) {\r\n");
      out.write("\t\t\t\t\t\t\t        paginationEl.removeChild (paginationEl.lastChild);\r\n");
      out.write("\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    for (i=1; i<=pagination.last; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t        var el = document.createElement('a');\r\n");
      out.write("\t\t\t\t\t\t\t        el.href = \"#\";\r\n");
      out.write("\t\t\t\t\t\t\t        el.innerHTML = i;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        if (i===pagination.current) {\r\n");
      out.write("\t\t\t\t\t\t\t            el.className = 'on';\r\n");
      out.write("\t\t\t\t\t\t\t        } else {\r\n");
      out.write("\t\t\t\t\t\t\t            el.onclick = (function(i) {\r\n");
      out.write("\t\t\t\t\t\t\t                return function() {\r\n");
      out.write("\t\t\t\t\t\t\t                    pagination.gotoPage(i);\r\n");
      out.write("\t\t\t\t\t\t\t                }\r\n");
      out.write("\t\t\t\t\t\t\t            })(i);\r\n");
      out.write("\t\t\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t        fragment.appendChild(el);\r\n");
      out.write("\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t    paginationEl.appendChild(fragment);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n");
      out.write("\t\t\t\t\t\t\t// 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction displayInfowindow(marker, title) {\r\n");
      out.write("\t\t\t\t\t\t\t    var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t    infowindow.setContent(content);\r\n");
      out.write("\t\t\t\t\t\t\t    infowindow.open(map, marker);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n");
      out.write("\t\t\t\t\t\t\tfunction removeAllChildNods(el) {   \r\n");
      out.write("\t\t\t\t\t\t\t    while (el.hasChildNodes()) {\r\n");
      out.write("\t\t\t\t\t\t\t        el.removeChild (el.lastChild);\r\n");
      out.write("\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t<form action=\"MainPage.jsp\" method=\"GET\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"submit\" value=\"홈으로\" style=\"background-color:red;\"><br>\r\n");
      out.write("\t\t\t\t\t\t</form> \r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</section>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Three -->\r\n");
      out.write("\t\t\t\t<!-- <section id=\"three\" class=\"wrapper style1\">\r\n");
      out.write("\t\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"feature-grid\">\r\n");
      out.write("                               \r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</section> -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Four -->\r\n");
      out.write("\t\t\t\t<section id=\"four\" class=\"wrapper style3 special\">\r\n");
      out.write("\t\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t\t<header class=\"major\">\r\n");
      out.write("\t\t\t\t\t\t\t<h2>웹정보시스템</h2>\r\n");
      out.write("\t\t\t\t\t\t\t<p>과제</p>\r\n");
      out.write("\t\t\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"actions\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#\" class=\"button special big\">Get in touch</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</section>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Footer -->\r\n");
      out.write("\t\t\t<footer id=\"footer\">\r\n");
      out.write("\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"icons\">\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\" class=\"icon fa-facebook\"></a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\" class=\"icon fa-twitter\"></a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"#\" class=\"icon fa-instagram\"></a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t<ul class=\"copyright\">\r\n");
      out.write("\t\t\t\t\t\t<li>&copy; Untitled</li>\r\n");
      out.write("\t\t\t\t\t\t<li>Design: <a href=\"http://templated.co\">TEMPLATED</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li>Images: <a href=\"http://unsplash.com\">Unsplash</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</footer>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
